import React,{Component} from 'react'import {    NavBar,    WingBlank,    List,    InputItem,    WhiteSpace,    Radio,    Button} from 'antd-mobile'import {connect} from 'react-redux'import {Redirect} from 'react-router-dom'import Logo from '../../components/logo/logo'import {register} from '../../redux/actions'const ListItem = List.Item/**  将ui组件包装生成一个容器组件 不能使用任何redux的语法*** */class Register extends Component{    state={        username:'',        password:'',        password2:'',        type:'jingying',    }    register = () => {        //发送异步ajax请求        // 调用函数实现注册的功能 在props中  user --> this.state 多传了一个pwd2        this.props.register(this.state)        // 这就调用了 dispatch（action）（调用reducer 传入最新的数据对象） -- reducer (更新数据) -- 重新渲染页面    }    handleChange=(name,val) => {        this.setState({            [name]:val        })    }    toLogin =() =>{        this.props.history.replace('/login')    }    render(){      const {msg,redirectTo} = this.props.user        if(redirectTo){        return <Redirect to={redirectTo}/>        }        return (            <div>                <NavBar>硅谷直聘</NavBar>                <Logo />                <WingBlank>                    <List>                        {msg?<div className='error-msg'>{msg}</div>:null}                        <WhiteSpace/>                        <InputItem onChange={ (val) => {this.handleChange('username',val)}} placeholder='请输入用户名'>用户名&nbsp;:</InputItem>                        <WhiteSpace/>                        <InputItem onChange={ (val) => {this.handleChange('password',val)}} type='password' placeholder='请输入密码'>密&nbsp;&nbsp;&nbsp;码&nbsp;:</InputItem>                        <WhiteSpace/>                        <InputItem onChange={ (val) => {this.handleChange('password2',val)}} type='password' placeholder='请再次输入密码'>确认密码&nbsp;:</InputItem>                        <WhiteSpace/>                        <ListItem>                            <span>用户类型:</span>                            &nbsp;&nbsp;&nbsp;&nbsp;                            <Radio onClick={()=>{this.handleChange('type','jingying')}} checked={this.state.type==='jingying'}>精英</Radio>                            &nbsp;&nbsp;&nbsp;&nbsp;                            <Radio onClick={()=>{this.handleChange('type','laoban')}} checked={this.state.type==='laoban'}>Boss</Radio>                        </ListItem>                        <WhiteSpace/>                        <Button type='primary' onClick={this.register}>注&nbsp;&nbsp;&nbsp;册</Button>                        <WhiteSpace/>                        <Button onClick={this.toLogin}>已有账号</Button>                    </List>                </WingBlank>            </div>        )    }}// 将 一般数据 和一般函数 通过connect 传入到ui组件中去 ， 然后就去了props中export default connect(    state =>({user:state.user}),    {register} // 函数 传递到 props)(Register)