import React,{Component} from 'react'import {Switch,Route,Redirect} from 'react-router-dom'import {connect} from 'react-redux'import Cookies from 'js-cookie' // 操作前端的cookie的对象  remove get setimport {NavBar} from 'antd-mobile'import LaobanInfo from '../laoban-info/laobaninfo'import JingyingInfo from '../jingying-info/jingyinginfo'import {getRedirectTo} from '../../utils/index'import {getUser} from "../../redux/actions";import Laoban from '../laoban/laoban'import Jingying from '../jingying/jingying'import Message from '../message/message'import Personal from '../personal/personal'import NotFound from '../../components/not-found/not-found'import NavFooter from '../../components/nav-footer/nav-footer'class Main extends Component{    //给组件对象添加属性    navList = [ // 包含所有导航组件的相关信息数据        {            path:'/laoban',            component:Laoban,            title:'精英列表',            icon:'dashen',            text:'精英'        },        {            path:'/jingying',            component:Jingying,            title:'Boss列表',            icon:'laoban',            text:'Boss'        },        {            path:'/message',            component:Message,            title:'消息列表',            icon:'message',            text:'消息'        },        {            path:'/personal',            component:Personal,            title:'个人界面',            icon:'personal',            text:'个人'        }    ]    componentDidMount () {        //登陆过但是没登陆上 所以redux中没有_id        const userid = Cookies.get('userid');        const {_id}  = this.props.user        if(userid && !_id){            //需要发送异步请求获取user信息            console.log('发送ajax请求获取user')            this.props.getUser()        }    }    render(){        // 读取浏览器是否有cookie        const userid = Cookies.get('userid');        //如果没有的话自动重定向到login界面        if(!userid){            return <Redirect to='/login'/>        }        const {user }  = this.props        if(!user._id){            //需要发送请求重新获取            return null        } else {            //如果有显示对应的界面            //如果请求的是根路径，根据user的type和header计算出一重定向的路径          // 通过history中的location获取当前的路径          let path = this.props.location.pathname            console.log(11+path)          if(path==='/'){             path = getRedirectTo(user.type,user.header)              return <Redirect to={path}/>          }        }/**  首先分成三部分 ： 头部（共用 只需更改内容） 中间路由  底部共用（更改内容）*   大神页面的时候显示的应该是老板的界面和老板的图标和标题 所以定义一个标识位*   如果登录的是老板的话 path为dashen的就不能显示 出来 需要去除** */        const {navList} = this        const pathname = this.props.location.pathname //请求的路径        //得到当前的nav 列表的path和当前的path        const currentNav = this.navList.find(nav => nav.path===pathname)        if(currentNav){            //决定哪个路由需要影藏            if(user.type === 'laoban'){                navList[1].hide=true            } else {                navList[0].hide=true            }        }        return(            <div>                {/*上面的导航共有的 所以需要判断当前请求的是哪个路径然后显示对应的内容*/}                {currentNav? <NavBar>{currentNav.title}</NavBar>:null}               <Switch>                   {                       navList.map((nav,index) => {                           return <Route path={nav.path} component={nav.component} key={index}/>                       })                   }                   <Route path='/laobaninfo' component={LaobanInfo}/>                   <Route path='/jingyinginfo' component={JingyingInfo}/>                   <Route component={NotFound}/>               </Switch>                {currentNav? <NavFooter navList={navList}/>:null}            </div>        )    }}export default connect(    state => ({user:state.user}),{getUser})(Main)/*实现自动登录    1. 登陆过（cookie中有userid）但是现在没有登陆上（redux管理的state中没有_id）,发送请求获取对应的user* */