import React,{Component} from 'react'import {Switch,Route,Redirect} from 'react-router-dom'import {connect} from 'react-redux'import Cookies from 'js-cookie' // 操作前端的cookie的对象  remove get setimport LaobanInfo from '../laoban-info/laobaninfo'import JingyingInfo from '../jingying-info/jingyinginfo'import {getRedirectTo} from '../../utils/index'import {getUser} from "../../redux/actions";class Main extends Component{    componentDidMount () {        //登陆过但是没登陆上 所以redux中没有_id        const userid = Cookies.get('userid');        const {_id}  = this.props.user        if(userid && !_id){            //需要发送异步请求获取user信息            console.log('发送ajax请求获取user')            this.props.getUser()        }    }    render(){        // 读取浏览器是否有cookie        const userid = Cookies.get('userid');        //如果没有的话自动重定向到login界面        if(!userid){            return <Redirect to='/login'/>        }        const {user }  = this.props        if(!user._id){            //需要发送请求重新获取            return null        } else {            //如果有显示对应的界面            //如果请求的是根路径，根据user的type和header计算出一重定向的路径          // 通过history中的location获取当前的路径          let path = this.props.location.pathname            console.log(11+path)          if(path==='/'){             path = getRedirectTo(user.type,user.header)              return <Redirect to={path}/>          }        }        return(            <div>               <Switch>                   <Route path='/laobaninfo' component={LaobanInfo}/>                   <Route path='/jingyinginfo' component={JingyingInfo}/>               </Switch>            </div>        )    }}export default connect(    state => ({user:state.user}),{getUser})(Main)/*实现自动登录    1. 登陆过（cookie中有userid）但是现在没有登陆上（redux管理的state中没有_id）,发送请求获取对应的user* */